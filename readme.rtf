{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue225;\red0\green0\blue128;\red34\green136\blue32;
\red128\green0\blue0;\red0\green0\blue102;\red0\green0\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14040\viewh12440\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Stubbie 0.1\
\
Short and sweet:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 Stubbie creates a set of test stub objects to be used in your unit tests based on your projects CFCs.\
\
Stubbie was inspired by a feature in Rails that creates stub test objects based on objects found in your application.\
\
You can run Stubbie standalone or as a plugin (there is a Mach-ii plugin available) and on execution it will recursively examine your projects code for CFCs and generate generic test objects for you, as well as a Test Suite. No more excuses to not use Unit Testing.\
\
It currently supports both CFUnit and CFCUnit.\
\
Credits:\
Special thanks must go to Stephen (Spike) Milligan for allowing me to use his CFCDoc code which allowed me to quickly build the project without having to worry about the File System and CFC parsing.\
\
Seth Petry-Johnson also deserves a special mention for allowing me to use his VarScopeChecker.cfc as part of the release so that we can all benefit from a var scope unit test.\
\
Installation:\
The simplest way to install stubbie is to just place it in your webroot, alternatively you can just create a mapping called /stubbie and point it to your install folder.\
\
Usage:\
Using stubbie requires 2 steps the first is editing config.xml and the second is calling the component.\
\
Step 1\
Open up the config.xml file and edit it the following settings\
\pard\pardeftab720\ql\qnatural

\f1\fs22 \cf2 <stubbie>\cf0 \
\
	\cf2 <config>\cf0 \
		\cf2 <appName\cf0  \cf2 value=\cf3 "myAppName"\cf0  \cf2 />\cf4 <!--\cf0  \cf4 the\cf0  \cf4 name\cf0  \cf4 of\cf0  \cf4 your\cf0  \cf4 app,\cf0  \cf4 e.g.\cf0  \cf4 the\cf0  \cf4 folder\cf0  \cf4 name\cf0  \cf4 under\cf0  \cf4 which\cf0  \cf4 the\cf0  \cf4 app\cf0  \cf4 resides\cf0 , \cf4 used\cf0  \cf4 to\cf0  \cf4 suffix\cf0  \cf4 the\cf0  \cf4 root\cf0  \cf4 path\cf0  \cf4 of\cf0  \cf4 your\cf0  \cf4 app\cf0  \cf4 -->\cf0 \
		\cf2 <appPath\cf0  \cf2 value=\cf3 "/Full/Path/To/Root/Of/Your/App"\cf0  \cf2 />\cf4 <!-- full\cf0  \cf4 path\cf0  \cf4 to\cf0  \cf4 the\cf0  \cf4 app\cf0 , \cf4 minus\cf0  \cf4 the\cf0  \cf4 app\cf0  \cf4 folder\cf0  \cf4 name\cf0  \cf4 -->\cf0 \
		\cf2 <packageRoot\cf0  \cf2 value=\cf3 "com.myDomain"\cf0  \cf2 />\cf4 <!--\cf0  \cf4 if\cf0  \cf4 you\cf0  \cf4 have\cf0  \cf4 a\cf0  \cf4 mapping\cf0  \cf4 for\cf0  \cf4 your\cf0  \cf4 app's\cf0  \cf4 cfcs,\cf0  \cf4 e.g.\cf0  \cf4 com.mydomain,\cf0  \cf4 specify\cf0  \cf4 it\cf0  \cf4 here\cf0  \cf4 -->\cf0 \
		\cf2 <saveTestFilesTo\cf0  \cf2 value=\cf3 ""\cf0  \cf2 />\cf4 <!--\cf0  \cf4 Not\cf0  \cf4 implemented\cf0  \cf4 yet,\cf0  \cf4 optional\cf0  \cf4 storage\cf0  \cf4 location\cf0  \cf4 for\cf0  \cf4 the\cf0  \cf4 test\cf0  \cf4 stubs\cf0  \cf4 -->\cf0 \
		\cf2 <unitTestFramework\cf0  \cf2 value=\cf3 "cfcUnit" \cf2 />\cf4 <!--\cf0  \cf4 cfcUnit\cf0  \cf4 and cfUnit are\cf0  \cf4 allowed\cf0  \cf4 options\cf0  \cf4 here\cf0  \cf4 -->\cf0 \
	\cf2 </config>\cf0 \
	\
\cf2 </stubbie>
\f0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
Step 2\
Place the following code in anywhere you wish to invoke stubbie from:\
\pard\pardeftab720\ql\qnatural

\f1\fs22 \cf5 <cfset\cf0  configFilePath = \cf6 ExpandPath\cf0 (\cf7 './config.xml'\cf0 )\cf5 />\cf0 \
\
\cf5 <cfset\cf0  stubbie = \cf6 CreateObject\cf0 (\cf7 "component"\cf0 ,\cf7 "Stubbie"\cf0 ).init(configFilePath)/\cf5 >\cf0 \
\cf5 <cfset\cf0  stubbie.build()\cf5 />
\f0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
Requirements:\
I have developed it and tested it on CFMX 7.0.2 but it should work just fine on CFMX 6.1.\
}